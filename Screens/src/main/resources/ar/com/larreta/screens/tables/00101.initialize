CREATE TABLE [SCHEMMA].screenElement (
	id BIGINT NOT NULL,
	deleted DATETIME,
	styleClass VARCHAR(255),
	tooltip VARCHAR(255),
	watermark VARCHAR(255),
	type VARCHAR(255),
	bindingObject VARCHAR(255),
	bindingProperty VARCHAR(255),
	rendered TINYINT(1),
	PRIMARY KEY (ID)
);

CREATE TABLE [SCHEMMA].validatorScreenElement (
	idScreenElement BIGINT NOT NULL,
	idValidator BIGINT NOT NULL,
	PRIMARY KEY (idScreenElement, idValidator)
);

CREATE TABLE [SCHEMMA].containedElement (
	id BIGINT NOT NULL,
	deleted DATETIME,
	idContainer BIGINT NOT NULL,
	idElement BIGINT NOT NULL,
	orderIndex BIGINT,
	PRIMARY KEY (ID)
);

CREATE TABLE [SCHEMMA].styleSheet (
	id BIGINT NOT NULL,
	name VARCHAR(255) NOT NULL,
	library VARCHAR(255) NOT NULL,
	PRIMARY KEY (ID)
);

CREATE TABLE [SCHEMMA].tabletag (
	id BIGINT NOT NULL,
	value VARCHAR(255),
	paginator TINYINT(1),
	lazy TINYINT(1),
	rows VARCHAR(255),
	paginatorTemplate VARCHAR(255),
	rowsPerPageTemplate VARCHAR(255),
	selectionMode VARCHAR(255),
	selection VARCHAR(255),
	emptyMessage VARCHAR(255),
	currentPageReportTemplate VARCHAR(255),
	lazyProperties VARCHAR(255),
	PRIMARY KEY (ID)
);

CREATE TABLE [SCHEMMA].columntag (
	id BIGINT NOT NULL,
	headerText VARCHAR(255),
	sortBy VARCHAR(255),
	width VARCHAR(255),
	idFilterMatchMode BIGINT,
	PRIMARY KEY (ID)
);

CREATE TABLE [SCHEMMA].screen (
	id BIGINT NOT NULL,
	entityClass VARCHAR(255),
	title VARCHAR(255),
	contentType VARCHAR(255),
	pragma VARCHAR(255),
	cacheControl VARCHAR(255),
	expires VARCHAR(255),
	preActionListenerName VARCHAR(255),
	postActionListenerName VARCHAR(255),
	initActionListenerName VARCHAR(255),
	lazyProperties VARCHAR(255),
	lazyCollections VARCHAR(255),
	PRIMARY KEY (ID)
);

CREATE TABLE [SCHEMMA].hasStyleSheets (
	idScreen BIGINT NOT NULL,
	idStyleSheet BIGINT NOT NULL,
	PRIMARY KEY (idScreen, idStyleSheet)
);

CREATE TABLE [SCHEMMA].attribute (
	id BIGINT NOT NULL,
	deleted DATETIME,
	name VARCHAR(255) NOT NULL,
	value VARCHAR(255),
	idButton BIGINT,
	PRIMARY KEY (ID)
);

CREATE TABLE [SCHEMMA].propertyActionListener (
	id BIGINT NOT NULL,
	value VARCHAR(255),
	forAttributes VARCHAR(255),
	idButton BIGINT NOT NULL,
	targetBindingObject VARCHAR(255) NOT NULL,
	targetBindingProperty VARCHAR(255) NOT NULL,
	PRIMARY KEY (ID)
);

CREATE TABLE [SCHEMMA].confirm (
	id BIGINT NOT NULL,
	header VARCHAR(255),
	message VARCHAR(255),
	icon VARCHAR(255),
	global TINYINT(1),
	showEffect VARCHAR(255),
	hideEffect VARCHAR(255),
	PRIMARY KEY (ID)
);

CREATE TABLE [SCHEMMA].button (
	id BIGINT NOT NULL,
	value VARCHAR(255),
	icon VARCHAR(255),
	idConfirm BIGINT,
	actionListenerObject VARCHAR(255),
	actionListenerMethod VARCHAR(255),
	updateValue VARCHAR(255),
	action VARCHAR(255),
	inmediate TINYINT(1),
	nextScreenId BIGINT,
	buttonType VARCHAR(255),
	PRIMARY KEY (ID)
);

CREATE TABLE [SCHEMMA].divtag (
	id BIGINT NOT NULL,
	PRIMARY KEY (ID)
);

CREATE TABLE [SCHEMMA].form (
	id BIGINT NOT NULL,
	acceptcharset VARCHAR(255),
	PRIMARY KEY (ID)
);

CREATE TABLE [SCHEMMA].menuItem (
	id BIGINT NOT NULL,
	value VARCHAR(255) NOT NULL,
	url VARCHAR(255) NOT NULL,
	PRIMARY KEY (ID)
);

CREATE TABLE [SCHEMMA].subMenu (
	id BIGINT NOT NULL,
	label VARCHAR(255) NOT NULL,
	PRIMARY KEY (ID)
);

CREATE TABLE [SCHEMMA].menuBar (
	id BIGINT NOT NULL,
	PRIMARY KEY (ID)
);

CREATE TABLE [SCHEMMA].graphicImage (
	id BIGINT NOT NULL,
	name VARCHAR(255) NOT NULL,
	library VARCHAR(255) NOT NULL,
	PRIMARY KEY (ID)
);

CREATE TABLE [SCHEMMA].commandLink (
	id BIGINT NOT NULL,
	PRIMARY KEY (ID)
);

CREATE TABLE [SCHEMMA].outputPanel (
	id BIGINT NOT NULL,
	autoUpdate VARCHAR(255),
	PRIMARY KEY (ID)
);

CREATE TABLE [SCHEMMA].label (
	id BIGINT NOT NULL,
	value VARCHAR(255),
	PRIMARY KEY (ID)
);

CREATE TABLE [SCHEMMA].input (
	id BIGINT NOT NULL,
	value VARCHAR(255),
	PRIMARY KEY (ID)
);

CREATE TABLE [SCHEMMA].panelGrid (
	id BIGINT NOT NULL,
	columns VARCHAR(255),
	PRIMARY KEY (ID)
);

CREATE TABLE [SCHEMMA].listSelectorItem (
	id BIGINT NOT NULL,
	orderIndex BIGINT,
	value VARCHAR(255),
	itemLabel VARCHAR(255),
	noSelectionOption VARCHAR(255),
	idListSelector BIGINT NOT NULL,
	PRIMARY KEY (ID)
);

CREATE TABLE [SCHEMMA].password (
	id BIGINT NOT NULL,
	value VARCHAR(255),
	required TINYINT(1),
	feedback TINYINT(1),
	inline TINYINT(1),
	matchId VARCHAR(255),
	label VARCHAR(255),
	promptLabel VARCHAR(255),
	weakLabel VARCHAR(255),
	goodLabel VARCHAR(255),
	strongLabel VARCHAR(255),
	PRIMARY KEY (ID)
);

CREATE TABLE [SCHEMMA].ajax (
	id BIGINT NOT NULL,
	event VARCHAR(255),
	updateAttribute VARCHAR(255),
	listener VARCHAR(255),
	eventElementId VARCHAR(255),
	PRIMARY KEY (ID)
);

CREATE TABLE [SCHEMMA].saverExecuted (
	id BIGINT NOT NULL,
	deleted DATETIME,
	description VARCHAR(255),
	PRIMARY KEY (ID)
);

CREATE TABLE [SCHEMMA].checkBox (
	id BIGINT NOT NULL,
	value VARCHAR(255),
	PRIMARY KEY (ID)
);

CREATE TABLE [SCHEMMA].filterMatchMode (
	id BIGINT NOT NULL,
	deleted DATETIME,
	description VARCHAR(255),
	type VARCHAR(255),
	valueType VARCHAR(255),
	entityClass VARCHAR(255),
	PRIMARY KEY (ID)
);

CREATE TABLE [SCHEMMA].validator (
	id BIGINT NOT NULL,
	deleted DATETIME,
	type VARCHAR(255),
	PRIMARY KEY (ID)
);

CREATE TABLE [SCHEMMA].listSelector (
	id BIGINT NOT NULL,
	type VARCHAR(255),
	entityType VARCHAR(255),
	lazyProperties VARCHAR(255),	
	value VARCHAR(255),
	changeListener VARCHAR(255),
	PRIMARY KEY (ID)
);

CREATE TABLE [SCHEMMA].multiBox (
	id BIGINT NOT NULL,
	sourceCaption VARCHAR(255),
	targetCaption VARCHAR(255),
	propertyItemLabel VARCHAR(255),
	effect VARCHAR(255),
	filterMatchMode VARCHAR(255),
	showSourceControls TINYINT(1),
	showTargetControls TINYINT(1),
	showCheckbox TINYINT(1),
	showSourceFilter TINYINT(1),
	showTargetFilter TINYINT(1),
	PRIMARY KEY (ID)
);

CREATE TABLE [SCHEMMA].comboBox (
	id BIGINT NOT NULL,
	PRIMARY KEY (ID)
);

CREATE TABLE [SCHEMMA].multiCheckBox (
	id BIGINT NOT NULL,
	PRIMARY KEY (ID)
);

ALTER TABLE [SCHEMMA].validatorScreenElement
ADD CONSTRAINT fk_validator_in_validatorScreenElement
FOREIGN KEY (idValidator)
REFERENCES [SCHEMMA].validator(id);

ALTER TABLE [SCHEMMA].validatorScreenElement
ADD CONSTRAINT fk_screenElement_in_validatorScreenElement
FOREIGN KEY (idScreenElement)
REFERENCES [SCHEMMA].screenElement(id);

ALTER TABLE [SCHEMMA].columnTag
ADD CONSTRAINT fk_filterMatchMode_in_columnTag
FOREIGN KEY (idFilterMatchMode)
REFERENCES [SCHEMMA].filterMatchMode(id);

ALTER TABLE [SCHEMMA].multiCheckBox
ADD CONSTRAINT fk_screenElement_in_multiCheckBox
FOREIGN KEY (id)
REFERENCES [SCHEMMA].screenElement(id);

ALTER TABLE [SCHEMMA].listSelectorItem
ADD CONSTRAINT fk_screenElement_in_listSelectorItem
FOREIGN KEY (id)
REFERENCES [SCHEMMA].screenElement(id);

ALTER TABLE [SCHEMMA].listSelectorItem
ADD CONSTRAINT fk_listSelector_in_listSelectorItem
FOREIGN KEY (idListSelector)
REFERENCES [SCHEMMA].listSelector(id);

ALTER TABLE [SCHEMMA].checkBox
ADD CONSTRAINT fk_screenElement_in_checkBox
FOREIGN KEY (id)
REFERENCES [SCHEMMA].screenElement(id);

ALTER TABLE [SCHEMMA].ajax
ADD CONSTRAINT fk_screenElement_in_ajax
FOREIGN KEY (id)
REFERENCES [SCHEMMA].screenElement(id);

ALTER TABLE [SCHEMMA].password
ADD CONSTRAINT fk_screenElement_in_password
FOREIGN KEY (id)
REFERENCES [SCHEMMA].screenElement(id);

ALTER TABLE [SCHEMMA].multiBox
ADD CONSTRAINT fk_screenElement_in_multiBox
FOREIGN KEY (id)
REFERENCES [SCHEMMA].screenElement(id);

ALTER TABLE [SCHEMMA].comboBox
ADD CONSTRAINT fk_screenElement_in_comboBox
FOREIGN KEY (id)
REFERENCES [SCHEMMA].screenElement(id);

ALTER TABLE [SCHEMMA].tabletag
ADD CONSTRAINT fk_screenElement_in_tabletag
FOREIGN KEY (id)
REFERENCES [SCHEMMA].screenElement(id);

ALTER TABLE [SCHEMMA].columntag
ADD CONSTRAINT fk_screenElement_in_columntag
FOREIGN KEY (id)
REFERENCES [SCHEMMA].screenElement(id);

ALTER TABLE [SCHEMMA].input
ADD CONSTRAINT fk_screenElement_in_input
FOREIGN KEY (id)
REFERENCES [SCHEMMA].screenElement(id);

ALTER TABLE [SCHEMMA].label
ADD CONSTRAINT fk_screenElement_in_label
FOREIGN KEY (id)
REFERENCES [SCHEMMA].screenElement(id);

ALTER TABLE [SCHEMMA].outputPanel
ADD CONSTRAINT fk_screenElement_in_outputPanel
FOREIGN KEY (id)
REFERENCES [SCHEMMA].screenElement(id);

ALTER TABLE [SCHEMMA].commandLink
ADD CONSTRAINT fk_screenElement_in_commandLink
FOREIGN KEY (id)
REFERENCES [SCHEMMA].screenElement(id);

ALTER TABLE [SCHEMMA].form
ADD CONSTRAINT fk_screenElement_in_form
FOREIGN KEY (id)
REFERENCES [SCHEMMA].screenElement(id);

ALTER TABLE [SCHEMMA].divtag
ADD CONSTRAINT fk_screenElement_in_divtag
FOREIGN KEY (id)
REFERENCES [SCHEMMA].screenElement(id);

ALTER TABLE [SCHEMMA].menuItem
ADD CONSTRAINT fk_screenElement_in_menuItem
FOREIGN KEY (id)
REFERENCES [SCHEMMA].screenElement(id);

ALTER TABLE [SCHEMMA].subMenu
ADD CONSTRAINT fk_screenElement_in_subMenu
FOREIGN KEY (id)
REFERENCES [SCHEMMA].screenElement(id);

ALTER TABLE [SCHEMMA].menuBar
ADD CONSTRAINT fk_screenElement_in_menuBar
FOREIGN KEY (id)
REFERENCES [SCHEMMA].screenElement(id);

ALTER TABLE [SCHEMMA].containedElement
ADD CONSTRAINT fk_container_in_containedElement
FOREIGN KEY (idContainer)
REFERENCES [SCHEMMA].screenElement(id);

ALTER TABLE [SCHEMMA].containedElement
ADD CONSTRAINT fk_element_in_containedElement
FOREIGN KEY (idElement)
REFERENCES [SCHEMMA].screenElement(id);

ALTER TABLE [SCHEMMA].propertyActionListener
ADD CONSTRAINT fk_submitButton_in_propertyActionListener
FOREIGN KEY (idButton)
REFERENCES [SCHEMMA].button(id);

ALTER TABLE [SCHEMMA].attribute
ADD CONSTRAINT fk_ajaxButton_in_attribute
FOREIGN KEY (idButton)
REFERENCES [SCHEMMA].button(id);

ALTER TABLE [SCHEMMA].screen
ADD CONSTRAINT fk_screenElement_in_screen
FOREIGN KEY (id)
REFERENCES [SCHEMMA].screenElement(id);

ALTER TABLE [SCHEMMA].hasStyleSheets
ADD CONSTRAINT fk_screen_in_hasStyleSheets
FOREIGN KEY (idScreen)
REFERENCES [SCHEMMA].screen(id);

ALTER TABLE [SCHEMMA].hasStyleSheets
ADD CONSTRAINT fk_styleSheet_in_hasStyleSheets
FOREIGN KEY (idStyleSheet)
REFERENCES [SCHEMMA].styleSheet(id);

ALTER TABLE [SCHEMMA].styleSheet
ADD CONSTRAINT fk_screenElement_in_styleSheet
FOREIGN KEY (id)
REFERENCES [SCHEMMA].screenElement(id);

ALTER TABLE [SCHEMMA].panelGrid
ADD CONSTRAINT fk_screenElement_in_panelGrid
FOREIGN KEY (id)
REFERENCES [SCHEMMA].screenElement(id);
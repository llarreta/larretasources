CREATE TABLE [SCHEMMA].screenElement (
	id BIGINT NOT NULL,
	deleted DATETIME,
	styleClass VARCHAR(255),
	tooltip VARCHAR(255),
	watermark VARCHAR(255),
	type VARCHAR(255),
	isPropertyValue TINYINT(1),
	PRIMARY KEY (ID)
);

CREATE TABLE [SCHEMMA].containedElement (
	id BIGINT NOT NULL,
	deleted DATETIME,
	idContainer BIGINT NOT NULL,
	idElement BIGINT NOT NULL,
	orderIndex BIGINT,
	PRIMARY KEY (ID)
);

CREATE TABLE [SCHEMMA].styleSheet (
	id BIGINT NOT NULL,
	name VARCHAR(255) NOT NULL,
	library VARCHAR(255) NOT NULL,
	PRIMARY KEY (ID)
);

CREATE TABLE [SCHEMMA].tabletag (
	id BIGINT NOT NULL,
	var VARCHAR(255),
	value VARCHAR(255),
	paginator TINYINT(1),
	lazy TINYINT(1),
	rows VARCHAR(255),
	paginatorTemplate VARCHAR(255),
	rowsPerPageTemplate VARCHAR(255),
	selectionMode VARCHAR(255),
	selection VARCHAR(255),
	emptyMessage VARCHAR(255),
	currentPageReportTemplate VARCHAR(255),
	PRIMARY KEY (ID)
);

CREATE TABLE [SCHEMMA].columntag (
	id BIGINT NOT NULL,
	headerText VARCHAR(255),
	sortBy VARCHAR(255),
	width VARCHAR(255),
	PRIMARY KEY (ID)
);

CREATE TABLE [SCHEMMA].screen (
	id BIGINT NOT NULL,
	title VARCHAR(255),
	contentType VARCHAR(255),
	pragma VARCHAR(255),
	cacheControl VARCHAR(255),
	expires VARCHAR(255),
	PRIMARY KEY (ID)
);

CREATE TABLE [SCHEMMA].hasStyleSheets (
	idScreen BIGINT NOT NULL,
	idStyleSheet BIGINT NOT NULL,
	PRIMARY KEY (idScreen, idStyleSheet)
);

CREATE TABLE [SCHEMMA].attribute (
	id BIGINT NOT NULL,
	name VARCHAR(255) NOT NULL,
	value VARCHAR(255) NOT NULL,
	idButton BIGINT NOT NULL,
	PRIMARY KEY (ID)
);

CREATE TABLE [SCHEMMA].propertyActionListener (
	id BIGINT NOT NULL,
	target VARCHAR(255) NOT NULL,
	value VARCHAR(255) NOT NULL,
	forAttributes VARCHAR(255) NOT NULL,
	idButton BIGINT NOT NULL,
	PRIMARY KEY (ID)
);

CREATE TABLE [SCHEMMA].confirm (
	id BIGINT NOT NULL,
	header VARCHAR(255) NOT NULL,
	message VARCHAR(255) NOT NULL,
	icon VARCHAR(255) NOT NULL,
	global TINYINT(1),
	showEffect VARCHAR(255) NOT NULL,
	hideEffect VARCHAR(255) NOT NULL,
	PRIMARY KEY (ID)
);

CREATE TABLE [SCHEMMA].button (
	id BIGINT NOT NULL,
	value VARCHAR(255),
	icon VARCHAR(255),
	idConfirm BIGINT,
	actionListener VARCHAR(255),
	updateValue VARCHAR(255),
	action VARCHAR(255),
	inmediate TINYINT(1),
	PRIMARY KEY (ID)
);

CREATE TABLE [SCHEMMA].divtag (
	id BIGINT NOT NULL,
	PRIMARY KEY (ID)
);

CREATE TABLE [SCHEMMA].form (
	id BIGINT NOT NULL,
	PRIMARY KEY (ID)
);

CREATE TABLE [SCHEMMA].menuItem (
	id BIGINT NOT NULL,
	value VARCHAR(255) NOT NULL,
	url VARCHAR(255) NOT NULL,
	PRIMARY KEY (ID)
);

CREATE TABLE [SCHEMMA].subMenu (
	id BIGINT NOT NULL,
	label VARCHAR(255) NOT NULL,
	PRIMARY KEY (ID)
);

CREATE TABLE [SCHEMMA].menuBar (
	id BIGINT NOT NULL,
	PRIMARY KEY (ID)
);

CREATE TABLE [SCHEMMA].graphicImage (
	id BIGINT NOT NULL,
	name VARCHAR(255) NOT NULL,
	library VARCHAR(255) NOT NULL,
	PRIMARY KEY (ID)
);

CREATE TABLE [SCHEMMA].commandLink (
	id BIGINT NOT NULL,
	PRIMARY KEY (ID)
);

CREATE TABLE [SCHEMMA].outputPanel (
	id BIGINT NOT NULL,
	autoUpdate VARCHAR(255),
	PRIMARY KEY (ID)
);

CREATE TABLE [SCHEMMA].label (
	id BIGINT NOT NULL,
	value VARCHAR(255),
	PRIMARY KEY (ID)
);

CREATE TABLE [SCHEMMA].input (
	id BIGINT NOT NULL,
	value VARCHAR(255),
	PRIMARY KEY (ID)
);

ALTER TABLE [SCHEMMA].tabletag
ADD CONSTRAINT fk_screenElement_in_tabletag
FOREIGN KEY (id)
REFERENCES [SCHEMMA].screenElement(id);

ALTER TABLE [SCHEMMA].columntag
ADD CONSTRAINT fk_screenElement_in_columntag
FOREIGN KEY (id)
REFERENCES [SCHEMMA].screenElement(id);

ALTER TABLE [SCHEMMA].input
ADD CONSTRAINT fk_screenElement_in_input
FOREIGN KEY (id)
REFERENCES [SCHEMMA].screenElement(id);

ALTER TABLE [SCHEMMA].label
ADD CONSTRAINT fk_screenElement_in_label
FOREIGN KEY (id)
REFERENCES [SCHEMMA].screenElement(id);

ALTER TABLE [SCHEMMA].outputPanel
ADD CONSTRAINT fk_screenElement_in_outputPanel
FOREIGN KEY (id)
REFERENCES [SCHEMMA].screenElement(id);

ALTER TABLE [SCHEMMA].commandLink
ADD CONSTRAINT fk_screenElement_in_commandLink
FOREIGN KEY (id)
REFERENCES [SCHEMMA].screenElement(id);

ALTER TABLE [SCHEMMA].form
ADD CONSTRAINT fk_screenElement_in_form
FOREIGN KEY (id)
REFERENCES [SCHEMMA].screenElement(id);

ALTER TABLE [SCHEMMA].divtag
ADD CONSTRAINT fk_screenElement_in_divtag
FOREIGN KEY (id)
REFERENCES [SCHEMMA].screenElement(id);

ALTER TABLE [SCHEMMA].menuItem
ADD CONSTRAINT fk_screenElement_in_menuItem
FOREIGN KEY (id)
REFERENCES [SCHEMMA].screenElement(id);

ALTER TABLE [SCHEMMA].subMenu
ADD CONSTRAINT fk_screenElement_in_subMenu
FOREIGN KEY (id)
REFERENCES [SCHEMMA].screenElement(id);

ALTER TABLE [SCHEMMA].menuBar
ADD CONSTRAINT fk_screenElement_in_menuBar
FOREIGN KEY (id)
REFERENCES [SCHEMMA].screenElement(id);

ALTER TABLE [SCHEMMA].containedElement
ADD CONSTRAINT fk_container_in_containedElement
FOREIGN KEY (idContainer)
REFERENCES [SCHEMMA].screenElement(id);

ALTER TABLE [SCHEMMA].containedElement
ADD CONSTRAINT fk_element_in_containedElement
FOREIGN KEY (idElement)
REFERENCES [SCHEMMA].screenElement(id);

ALTER TABLE [SCHEMMA].button
ADD CONSTRAINT fk_confirm_in_button
FOREIGN KEY (idConfirm)
REFERENCES [SCHEMMA].confirm(id);

ALTER TABLE [SCHEMMA].propertyActionListener
ADD CONSTRAINT fk_submitButton_in_propertyActionListener
FOREIGN KEY (idButton)
REFERENCES [SCHEMMA].button(id);

ALTER TABLE [SCHEMMA].attribute
ADD CONSTRAINT fk_ajaxButton_in_attribute
FOREIGN KEY (idButton)
REFERENCES [SCHEMMA].button(id);

ALTER TABLE [SCHEMMA].screen
ADD CONSTRAINT fk_screenElement_in_screen
FOREIGN KEY (id)
REFERENCES [SCHEMMA].screenElement(id);

ALTER TABLE [SCHEMMA].hasStyleSheets
ADD CONSTRAINT fk_screen_in_hasStyleSheets
FOREIGN KEY (idScreen)
REFERENCES [SCHEMMA].screen(id);

ALTER TABLE [SCHEMMA].hasStyleSheets
ADD CONSTRAINT fk_styleSheet_in_hasStyleSheets
FOREIGN KEY (idStyleSheet)
REFERENCES [SCHEMMA].styleSheet(id);

ALTER TABLE [SCHEMMA].styleSheet
ADD CONSTRAINT fk_screenElement_in_styleSheet
FOREIGN KEY (id)
REFERENCES [SCHEMMA].screenElement(id);
